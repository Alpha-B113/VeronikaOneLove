class Cursor{
    static Vector position;
        static Array underCursor;
            static Vector prevPosition;
                static bool hasPrev;


    function void init()
    {
        let prevPosition = Vector.new(-1, -1);
        let underCursor = Array.new(4);
        let position = Vector.new(16, 16);
        let hasPrev = false;
        do DrawUI.drawCursor(position);
        return;
    }
    function void moveDirection(Vector direction){
        var int newX, newY;
        let newX = position.getX() + direction.getX();
        let newY = position.getY() + direction.getY();
        if (Cursor.isValidMoveDirection(newX, newY)){
            do DrawUI.cleanCursor(position);
            let position = position.add(direction);
            do DrawUI.updatePosition(position);
            do DrawUI.drawCursor(position);
        }
        do direction.dispose();
        return;
    }
    function bool isValidMoveDirection(int x, int y){
        return ((x > 0) & (x < 511) & (y > 16) & (y < 238));
    }




    function  void savePosition(){
        let prevPosition = position;
        let hasPrev = true;
        return;
    }
    function bool prevIsNone(){
        return hasPrev;
    }
    function int getPositionX(){
        return position.getX();
    }

    function int getPositionY(){
        return position.getY();
    }
    function int getPosition(){
        return position;
    }
}