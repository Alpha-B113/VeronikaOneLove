class Cursor{
    static Vector position;
        static Array underCursor;
            static Vector prevPosition;


    function void init()
    {
        let prevPosition = Vector.new(-1, -1);
        let underCursor = Array.new(4);
        let position = Vector.new(16, 16);
        do DrawUI.drawCursor(position);
        return;
    }
    function void savePixelUnderCursor(){
        let underCursor[0] = Cursor.getColor(position.getX(), position.getY()-1);
        let underCursor[1] = Cursor.getColor(position.getX()+1, position.getY());
        let underCursor[2] = Cursor.getColor(position.getX(), position.getY()+1);
        let underCursor[3] = Cursor.getColor(position.getX()-1, position.getY());
        return;
    }


    function bool getColor(int x, int y){
        var int address, bitMask, pixelWord, a,b,c;
        let a = (32 * y);
        let b = (x / 16);
        let c = -b*16 + x ;
        let address = 16384 + a + b;
        let pixelWord = Memory.peek(address);

        if (c=15 & pixelWord <0){
            return true;
        }
        let bitMask = Main.binPow(2,c); 
        return ~((pixelWord & bitMask) = 0);
    }

    function void moveDirection(Vector direction){
        var int newX, newY;
        let newX = position.getX() + direction.getX();
        let newY = position.getY() + direction.getY();
        if (Cursor.isValidMoveDirection(newX, newY)){

            do DrawUI.cleanCursor(position);
            do DrawUI.loadPixelUnderCursor(position, underCursor);
            let position = position.add(direction);
            do DrawUI.updatePosition();
            do Cursor.savePixelUnderCursor();
            do DrawUI.drawCursor(position);
        }
        do direction.dispose();
        return;
    }

    function bool isValidMoveDirection(int x, int y){
        //return ((x > 0) & (x < 511) & (y > 0) & (y < 254));
        return ((x > 0) & (x < 511) & (y > 16) & (y < 238));
    }


    function  void savePosition(){
        do prevPosition.dispose();
        let prevPosition = Vector.new(position.getX(),position.getY());
        return;
    }

    function int getPositionX(){
        return position.getX();
    }

    function int getPositionY(){
        return position.getY();
    }

    function Vector getPosition(){
        return position;
    }

    function Vector getPrevPosition(){
        return prevPosition;
    }
}
